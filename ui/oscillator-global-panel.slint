import { Panel, Heading, Label, LevelSlider, ActivationSwitch } from "../ui/components.slint";
import { Theme } from "../ui/theme.slint";


export component OscillatorGlobalPanel inherits HorizontalLayout {
    callback wave_detune_value_changed(float);
    callback wave_detune_state_changed(bool, float);
    callback output_level_value_changed(int);
    callback output_level_constant_activated(bool);

    Panel {

        HorizontalLayout {
            alignment: center;
            spacing: 10px;
            padding: 10px;

            VerticalLayout {
                spacing: 10px;

                Heading {
                    horizontal-alignment: center;
                    heading: Theme.detune-heading-text;
                }

                ActivationSwitch {
                    activated-text: Theme.activation-switch-active-text;
                    not-activated-text: Theme.activation-switch-not-active-text;

                    activation_toggled => {
                        detune_amount.enabled = self.activated;
                        wave_detune_state_changed(self.activated, round(detune_amount.level) / 100);
                    }
                }

                Label {
                    horizontal-alignment: center;
                    label: round(detune_amount.value) + Theme.detune-amount-label-suffix;
                }

                detune_amount := LevelSlider {
                    level: Theme.detune-amount-slider-default;
                    level-step: Theme.osc-level-slider-step;
                    minimum-level: Theme.osc-level-slider-minimum;
                    maximum-level: Theme.osc-level-slider-maximum;
                    enabled: false;
                    level_selected(level) => {
                        wave_detune_value_changed(level / 100);
                    }
                }
            }

            VerticalLayout {
                spacing: 10px;

                Heading {
                    horizontal-alignment: center;
                    heading: Theme.output-level-heading-text;
                }

                output_level_constant := ActivationSwitch {
                    activated-text: Theme.output-level-constant-active-text;
                    not-activated-text: Theme.output-level-constant-not-active-text;
                    checked: true;

                    activation_toggled => {
                        root.output_level_constant_activated(self.checked);
                    }
                }

                Label {
                    horizontal-alignment: center;
                    label: round(output_level.value) - 100 + Theme.output-level-label-suffix;
                }

                output_level := LevelSlider {
                    level: Theme.output-level-slider-default;
                    level-step: Theme.output-level-slider-step;
                    minimum-level: Theme.output-level-slider-minimum;
                    maximum-level: Theme.output-level-slider-maximum;
                    level_selected(level) => {
                        root.output_level_value_changed(level - 100);
                    }
                }
            }
        }
    }
}
