import { Panel, Heading, Label, LevelSlider, LFOSlider, OscilatorControls, WaveSelector, ActivationSwitch, StartButton, ActionButton } from "../ui/components.slint";
import { Theme } from "../ui/theme.slint";


export component OscillatorPanel inherits HorizontalLayout {

    callback wave_level_selected(float, int);
    callback wave_specific_parameter_selected(float, int);
    callback wave_am_amount_selected(int, int);
    callback wave_shape_selected(string, int);
    callback wave_tuning_changed(int, int);
    callback wave_shaper_amount_changed(float, int);
    callback wave_mod_speed_changed(float, int);
    callback wave_mod_amount_changed(float, int);

    Panel {
        width: Theme.oscillator-panel-width;

        VerticalLayout {
            alignment: center;
            spacing: 10px;
            padding: 10px;

            HorizontalLayout {
                alignment: center;
                spacing: 10px;

                osc1 := OscilatorControls {
                    heading: Theme.oscillator1-heading-text;
                    oscillator_number: 1;

                    wave_level_selected(level, oscillator) => {
                        root.wave_level_selected(level, oscillator);
                    }
                    specific_parameter_selected(amount, oscillator) => {
                        root.wave_specific_parameter_selected(amount, oscillator);
                    }
                    wave_shape_selected(shape, oscillator) => {
                        root.wave_shape_selected(shape, oscillator);
                    }
                    wave_tuning_changed(interval, oscillator) => {
                        root.wave_tuning_changed(interval, oscillator);
                    }
                    wave_shaper_amount_changed(amount, oscillator) => {
                        root.wave_shaper_amount_changed(amount, oscillator);
                    }
                    wave_mod_amount_changed(amount, oscillator) => {
                        root.wave_mod_amount_changed(amount, oscillator);
                    }
                    wave_mod_speed_changed(speed_hz, oscillator) => {
                        root.wave_mod_speed_changed(speed_hz, oscillator);
                    }
                }

                osc2 := OscilatorControls {
                    heading: Theme.oscillator2-heading-text;
                    oscillator_number: 2;

                    wave_level_selected(level, oscillator) => {
                        root.wave_level_selected(level, oscillator);
                    }
                    specific_parameter_selected(amount, oscillator) => {
                        root.wave_specific_parameter_selected(amount, oscillator);
                    }
                    wave_shape_selected(shape, oscillator) => {
                        root.wave_shape_selected(shape, oscillator);
                    }
                    wave_tuning_changed(interval, oscillator) => {
                        root.wave_tuning_changed(interval, oscillator);
                    }
                    wave_shaper_amount_changed(amount, oscillator) => {
                        root.wave_shaper_amount_changed(amount, oscillator);
                    }
                    wave_mod_amount_changed(amount, oscillator) => {
                        root.wave_mod_amount_changed(amount, oscillator);
                    }
                    wave_mod_speed_changed(speed_hz, oscillator) => {
                        root.wave_mod_speed_changed(speed_hz, oscillator);
                    }
                }

                osc3 := OscilatorControls {
                    heading: Theme.oscillator3-heading-text;
                    oscillator_number: 3;

                    wave_level_selected(level, oscillator) => {
                        root.wave_level_selected(level, oscillator);
                    }
                    specific_parameter_selected(amount, oscillator) => {
                        root.wave_specific_parameter_selected(amount, oscillator);
                    }
                    wave_shape_selected(shape, oscillator) => {
                        root.wave_shape_selected(shape, oscillator);
                    }
                    wave_tuning_changed(interval, oscillator) => {
                        root.wave_tuning_changed(interval, oscillator);
                    }
                    wave_shaper_amount_changed(amount, oscillator) => {
                        root.wave_shaper_amount_changed(amount, oscillator);
                    }
                    wave_mod_amount_changed(amount, oscillator) => {
                        root.wave_mod_amount_changed(amount, oscillator);
                    }
                    wave_mod_speed_changed(speed_hz, oscillator) => {
                        root.wave_mod_speed_changed(speed_hz, oscillator);
                    }
                }

                sub := OscilatorControls {
                    heading: Theme.sub-oscillator-heading-text;
                    is_sub: true;
                    oscillator_number: 0;

                    wave_level_selected(level, oscillator) => {
                        root.wave_level_selected(level, oscillator);
                    }
                    specific_parameter_selected(amount, oscillator) => {
                        root.wave_specific_parameter_selected(amount, oscillator);
                    }
                    wave_shape_selected(shape, oscillator) => {
                        root.wave_shape_selected(shape, oscillator);
                    }
                    wave_tuning_changed(interval, oscillator) => {
                        root.wave_tuning_changed(interval, oscillator);
                    }
                    wave_shaper_amount_changed(amount, oscillator) => {
                        root.wave_shaper_amount_changed(amount, oscillator);
                    }
                    wave_mod_amount_changed(amount, oscillator) => {
                        root.wave_mod_amount_changed(amount, oscillator);
                    }
                    wave_mod_speed_changed(speed_hz, oscillator) => {
                        root.wave_mod_speed_changed(speed_hz, oscillator);
                    }
                }
            }
        }
    }
}
